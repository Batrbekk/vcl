"use client"

import { useEffect, useState } from "react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Alert, AlertDescription } from "@/components/ui/alert"
import { useWhatsAppStore } from "@/store/whatsapp-store"
import { useUserStore } from "@/store/user-store"
import { WhatsAppSessionManager } from "@/components/dashboard/whatsapp/session-manager"
import { WhatsAppChatView } from "@/components/dashboard/whatsapp/chat-view"
import { WhatsAppStats } from "@/components/dashboard/whatsapp/stats-view"
import { Plus, AlertCircle, Loader2, MessageCircle } from "lucide-react"

export default function WhatsAppPage() {
  const [activeTab, setActiveTab] = useState("sessions")
  const {
    sessions,
    stats,
    isLoading,
    isConnected,
    currentSessionId,
    permissions,
    connectionStatus,
    initSocket,
    fetchSessions,
    fetchStats,
    createSession,
    stopPolling
  } = useWhatsAppStore()
  const { user } = useUserStore()

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebSocket –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    console.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WhatsApp –º–æ–¥—É–ª—è...")
    initSocket()
    fetchSessions()
    fetchStats()

    // Cleanup –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    return () => {
      console.log("Cleanup WhatsApp –º–æ–¥—É–ª—è...")
      stopPolling()
      // WebSocket –±—É–¥–µ—Ç –æ—Ç–∫–ª—é—á–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ store
    }
  }, [initSocket, fetchSessions, fetchStats, stopPolling])

  // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
  useEffect(() => {
    const interval = setInterval(() => {
      if (isConnected) {
        fetchStats()
      }
    }, 30000) // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥

    return () => clearInterval(interval)
  }, [isConnected, fetchStats])



  const handleCreateSession = async () => {
    const sessionId = await createSession()
    if (sessionId) {
      // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–µ—Å—Å–∏—è–º–∏
      setActiveTab("sessions")
    }
  }

  const handleSessionSelect = () => {
    // –§—É–Ω–∫—Ü–∏—è –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ —Ä—É—á–Ω–æ–º –≤—ã–±–æ—Ä–µ —Å–µ—Å—Å–∏–∏ –∏–∑ session-manager
    console.log('üì± –°–µ—Å—Å–∏—è –≤—ã–±—Ä–∞–Ω–∞ –≤—Ä—É—á–Ω—É—é')
  }

  const connectedSessions = (sessions || []).filter(session => session.isConnected)
  const todayMessages = stats?.messages?.today || 0

  const canManageSessions = user?.role === 'admin'
  const userRole = user?.role as 'admin' | 'manager' || 'manager'

  // –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
  useEffect(() => {
    console.log('üè† WhatsAppPage: –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å:', {
      currentSessionId,
      permissions,
      connectedSessions: connectedSessions.length,
      sessions: sessions?.length || 0,
      connectionStatus,
      isConnected,
      timestamp: new Date().toISOString(),
      connectedSessionsDetails: connectedSessions.map(s => ({
        id: s.id.slice(0, 8),
        phoneNumber: s.phoneNumber,
        displayName: s.displayName,
        isActive: s.isActive
      })),
      allSessionsDetails: (sessions || []).map(s => ({
        id: s.id.slice(0, 8),
        isConnected: s.isConnected,
        phoneNumber: s.phoneNumber,
        displayName: s.displayName,
        isActive: s.isActive
      }))
    })
  }, [currentSessionId, permissions, connectedSessions, sessions, connectionStatus, isConnected])

  return (
    <div className="space-y-6 p-8">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">WhatsApp</h1>
        <div className="flex items-center space-x-3">
          {/* –°—Ç–∞—Ç—É—Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket */}
          <div className="flex items-center space-x-2 text-sm">
            {isConnected ? (
              <>
                <div className="w-2 h-2 bg-green-500 rounded-full animate-pulse" />
                <span className="text-green-600">Online</span>
              </>
            ) : (
              <>
                <div className="w-2 h-2 bg-red-500 rounded-full" />
                <span className="text-red-600">Offline</span>
              </>
            )}
          </div>
          
          {/* –°—Ç–∞—Ç—É—Å —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏ */}
          {currentSessionId && (
            <Badge variant="outline">
              –ê–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è: {currentSessionId.slice(0, 8)}...
            </Badge>
          )}
          
          {canManageSessions && (
            <Button 
              onClick={handleCreateSession}
              disabled={isLoading}
            >
              {isLoading ? (
                <Loader2 className="mr-2 h-4 w-4 animate-spin" />
              ) : (
                <Plus className="mr-2 h-4 w-4" />
              )}
              –°–æ–∑–¥–∞—Ç—å —Å–µ—Å—Å–∏—é
            </Button>
          )}
        </div>
      </div>

      {/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –µ—Å–ª–∏ WebSocket –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω */}
      {!isConnected && (
        <Alert>
          <AlertCircle className="h-4 w-4" />
          <AlertDescription>
            –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º. –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã.
          </AlertDescription>
        </Alert>
      )}

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç */}
      <Card>
        <CardHeader>
          <CardTitle>WhatsApp –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ</CardTitle>
          <CardDescription>
            –£–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–µ—Å—Å–∏—è–º–∏ WhatsApp, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –¥–æ—Å—Ç—É–ø–∞ –∏ —á–∞—Ç–∞–º–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Tabs value={activeTab} onValueChange={setActiveTab} className="w-full">
            <TabsList className="grid w-full grid-cols-3">
              <TabsTrigger value="sessions">
                –°–µ—Å—Å–∏–∏
                {(sessions || []).length > 0 && (
                  <Badge variant="secondary" className="ml-2">
                    {(sessions || []).length}
                  </Badge>
                )}
              </TabsTrigger>
              <TabsTrigger value="chats" disabled={!isConnected || connectedSessions.length === 0}>
                –ß–∞—Ç—ã
              </TabsTrigger>
              <TabsTrigger value="stats">
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
                {todayMessages > 0 && (
                  <Badge variant="secondary" className="ml-2">
                    +{todayMessages}
                  </Badge>
                )}
              </TabsTrigger>
            </TabsList>

            <TabsContent value="sessions" className="space-y-4">
              {isLoading ? (
                <div className="flex items-center justify-center py-8">
                  <Loader2 className="h-8 w-8 animate-spin" />
                  <span className="ml-3 text-sm text-gray-500">–ó–∞–≥—Ä—É–∑–∫–∞ —Å–µ—Å—Å–∏–π...</span>
                </div>
              ) : (
                <WhatsAppSessionManager 
                  userRole={userRole}
                  onSessionSelect={handleSessionSelect}
                />
              )}
            </TabsContent>

            <TabsContent value="chats" className="space-y-4">
              {connectedSessions.length === 0 ? (
                <div className="text-center py-8">
                  <MessageCircle className="mx-auto h-12 w-12 text-gray-400" />
                  <h3 className="mt-2 text-sm font-medium text-gray-900">
                    –ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã—Ö —Å–µ—Å—Å–∏–π
                  </h3>
                  <p className="mt-1 text-sm text-gray-500">
                    –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ WhatsApp —Å–µ—Å—Å–∏–∏ –≤–æ –≤–∫–ª–∞–¥–∫–µ &quot;–°–µ—Å—Å–∏–∏&quot; –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏
                  </p>
                  <Button 
                    className="mt-4"
                    onClick={() => setActiveTab("sessions")}
                  >
                    –ü–µ—Ä–µ–π—Ç–∏ –∫ —Å–µ—Å—Å–∏—è–º
                  </Button>
                </div>
              ) : (
                <WhatsAppChatView 
                  sessionId={currentSessionId || connectedSessions[0]?.id}
                  permissions={permissions || { canRead: true, canWrite: true, canManageChats: userRole === 'admin' }}
                />
              )}
            </TabsContent>

            <TabsContent value="stats" className="space-y-4">
              <WhatsAppStats stats={stats} />
            </TabsContent>
          </Tabs>
        </CardContent>
      </Card>
    </div>
  )
} 